---
- name: Create openstack/minimal
  hosts: localhost
  connection: local

  vars:
    state: present
    flavor: "{{ lookup('ansible.builtin.env', 'ANSIBLE_VAR_flavor', default='SCS-1V:4:10') }}"
    image: "{{ lookup('ansible.builtin.env', 'ANSIBLE_VAR_image', default='Ubuntu 22.04') }}"
    prefix: "{{ lookup('ansible.builtin.env', 'ANSIBLE_VAR_prefix', default='timon') }}"
    provider_cloud: "{{ lookup('ansible.builtin.env', 'ANSIBLE_VAR_provider_cloud', default='openstack') }}"
    public: "{{ lookup('ansible.builtin.env', 'ANSIBLE_VAR_public_network', default='external') }}"

  tasks:
    - name: "Create {{ prefix }}-network"
      openstack.cloud.network:
        cloud: "{{ provider_cloud }}"
        state: "{{ state }}"
        name: "{{ prefix }}-network"
        mtu: 1300  # NOTE: necessary because Geneve/VxLAN in Geneve/VxLAN

    - name: "Create {{ prefix }}-subnet"
      openstack.cloud.subnet:
        cloud: "{{ provider_cloud }}"
        state: "{{ state }}"
        name: "{{ prefix }}-subnet"
        network_name: "{{ prefix }}-network"
        cidr: 192.168.16.0/24
        allocation_pool_start: 192.168.16.200
        allocation_pool_end: 192.168.16.250

    - name: "Create {{ prefix }}-router"
      openstack.cloud.router:
        cloud: "{{ provider_cloud }}"
        state: "{{ state }}"
        name: "{{ prefix }}-router"
        network: "{{ public }}"
        interfaces:
          - "{{ prefix }}-subnet"

    - name: "Create {{ prefix}}-secgroup"
      openstack.cloud.security_group:
        cloud: "{{ provider_cloud }}"
        state: "{{ state }}"
        name: "{{ prefix }}-secgroup"

    - name: Add rule to ssh security group
      openstack.cloud.security_group_rule:
        cloud: "{{ provider_cloud }}"
        state: "{{ state }}"
        security_group: "{{ prefix }}-secgroup"
        protocol: tcp
        port_range_min: 22
        port_range_max: 22
        remote_ip_prefix: 0.0.0.0/0

    - name: Add rule to icmp security group
      openstack.cloud.security_group_rule:
        cloud: "{{ provider_cloud }}"
        state: "{{ state }}"
        security_group: "{{ prefix }}-secgroup"
        protocol: icmp
        remote_ip_prefix: 0.0.0.0/0

    - name: "Create {{ prefix }}-keypair"
      openstack.cloud.keypair:
        cloud: "{{ provider_cloud }}"
        state: "{{ state }}"
        name: "{{ prefix }}-keypair"
      register: result
      no_log: true

    - name: Write private key to /output/private_key
      ansible.builtin.copy:
        dest: /output/private_key
        content: "{{ result.key.private_key }}"
      when:
        - result.changed | bool
        - state == 'present'

    - name: "Create {{ prefix }}-instance"
      openstack.cloud.server:
        cloud: "{{ provider_cloud }}"
        state: "{{ state }}"
        name: "{{ prefix }}-instance"
        image: "{{ image }}"
        flavor: "{{ flavor }}"
        network: "{{ prefix }}-network"
        delete_fip: true
        key_name: "{{ prefix }}-keypair"
        security_groups: "{{ prefix }}-secgroup"

    - name: "Assing floating ip address to {{ prefix }}-instance"
      openstack.cloud.floating_ip:
        cloud: "{{ provider_cloud }}"
        state: "{{ state }}"
        server: "{{ prefix }}-instance"
        network: "{{ public }}"
        nat_destination: "{{ prefix }}-network"
        wait: true
        timeout: 180
        purge: true

    - name: Get instance info
      openstack.cloud.server_info:
        cloud: "{{ provider_cloud }}"
        server: "{{ prefix }}-instance"
      register: result
      when: state == 'present'

    - name: Write floating ip addres to /output/address
      ansible.builtin.copy:
        dest: /output/address
        content: "{{ result.openstack_servers[0].public_v4 }}"
      when: state == 'present'
